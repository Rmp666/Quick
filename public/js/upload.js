(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/js/upload"],{

/***/ "./resources/js/downloads/upload.js":
/*!******************************************!*\
  !*** ./resources/js/downloads/upload.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {//var upload = (function() {\nvar fileInputClone = {};\nvar countFiles = 1;\n\nfunction bind() {\n  $('body').on('click', '#addFile', addUpload);\n  $('body').on('change', '.custom-file-input', changeLabelName);\n  $('body').on('click', '#notFile', cancelUpload);\n  $('body').on('click', '#addMoreFiles', addFileInput);\n  $('body').on('click', '[data-file]', removeFileInput);\n  $('body').on('click', '#download', validateArticle);\n}\n\nfunction addUpload() {\n  $('#formUpload').removeClass('d-none');\n  $('#publish').addClass('d-none'); // Добавляем атрибут, связанный с валидацией\n\n  $('.custom-file-input, .label-file').attr('data-validate', true);\n  fileInputClone = $('.main-card').clone();\n}\n\nfunction cancelUpload() {\n  countFiles = 1; // Удаляем все div кроме первого\n\n  $('.next-card').remove(); // Чистим первый div\n\n  $('.custom-file-input').each(function () {\n    $(this).val('');\n  });\n  $('.custom-file-label').each(function () {\n    $(this).text('');\n  });\n  $('.label-file').each(function () {\n    $(this).val('');\n  }); // Удаляем атрибут, связанный с валидацией !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n  $('.custom-file-input, .label-file').removeAttr('data-validate', true); // Удаляем связь статьи с файлами \n\n  $('[name=\"download_id\"]').val(''); // Скрываем форму для загрузки файлов\n\n  $('#formUpload').addClass('d-none'); // Отображаем submit на форме создания статьи\n\n  $('#publish').removeClass('d-none');\n} // Отображаем короткое название файла в div относящимся к input\n\n\nfunction changeLabelName() {\n  var input = $(this);\n  var divCustomFile = input.parent();\n  divCustomFile.find('.custom-file-label').each(function () {\n    $(this).text(input.val().split('\\\\').pop());\n  });\n}\n\nfunction addFileInput() {\n  ++countFiles;\n  var localFileInput = fileInputClone.clone();\n  localFileInput.removeClass('main-card').addClass('next-card card-file-' + countFiles);\n  var newName = $(localFileInput).find('.custom-file-input, .label-file');\n  newName.each(function () {\n    var name = $(this).attr('name');\n    name = name.replace('1', countFiles);\n    $(this).attr('name', name);\n  });\n  var removeButton = $(localFileInput).find('[data-file=\"1\"]');\n  removeButton.attr('data-file', countFiles).removeClass('d-none');\n  localFileInput.insertBefore($('#addMoreFilesDiv'));\n}\n\nfunction removeFileInput() {\n  $('.card-file-' + $(this).data('file')).remove();\n}\n\nfunction submitFile() {\n  var _this = this;\n\n  var formUpload = new FormData();\n  var files = $('#formUpload').find('.custom-file-input');\n  files.each(function () {\n    formUpload.append(this.name, this.files[0]); //console.log(formUpload.getAll(this.name));\n  });\n  var fileNames = $('#formUpload').find('.label-file');\n  fileNames.each(function () {\n    formUpload.append(this.name, $(this).val());\n  });\n  axios.post('../download', formUpload, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }).then(function (response) {\n    // Записываем id добавленных файлов для привязки их к статье\n    $('[name=\"download_id\"]').val(response.data);\n    alert('Files added successfully'); // Отправляем статью на сервер\n\n    $('#createForm').trigger('submit');\n  }).catch(function (error) {\n    if (error.response.status == 422) {\n      _this.errors = error.response.data.errors;\n    }\n  });\n}\n\nfunction validateArticle() {\n  $('.span-error').remove();\n  var errors = '';\n  var inputs = $('[data-validate=\"true\"]');\n  inputs.each(function () {\n    if ($(this).val().trim() === '') {\n      errors += 'error';\n      $(this).parent().append('<span class = \"text-danger span-error\">Not empty</span>');\n    }\n  });\n\n  if (errors.indexOf('error') === -1) {\n    submitFile();\n  }\n} //    return{\n//        bind: bind\n//    }\n//\n//})();\n\n\nbind();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/downloads/upload.js\n");

/***/ }),

/***/ 3:
/*!************************************************!*\
  !*** multi ./resources/js/downloads/upload.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\open server\OSPanel\domains\Example\Project\resources\js\downloads\upload.js */"./resources/js/downloads/upload.js");


/***/ })

},[[3,"/js/manifest","/js/vendor"]]]);